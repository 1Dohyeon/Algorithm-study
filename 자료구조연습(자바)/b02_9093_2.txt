package dataStructure1_dfs;
import java.io.*;
//stack 없이 풀기

public class b02_9093_1 {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        int t = Integer.parseInt(br.readLine());	// 테스트 케이스
        
        for(int i=0;i<t;i++) {
        	String input = br.readLine();	// 문장을 입력받고 
        	String[] split = input.split(" ");	// " " 기준으로 쪼갬
        	
        	StringBuilder sb = new StringBuilder();
        	
        	for(String s : split) {	// split 배열에서 0번째 원소부터 마지막 원소까지 탐색
        		StringBuilder reverse = new StringBuilder(s);	// reverse 배열에 새로운 StringBuilder 변수 s를 담음
                sb.append(reverse.reverse());	// reverse 변수를 reverse()를 통해 뒤집어줌
                sb.append(' ');	// 뒤에 ' ' 뛰어쓰기를 붙여줌 \
        	}	// 다시 탐색문 처음으로 돌아가서 reverse값을 새로 주고 반복
        	
        	sb.deleteCharAt(sb.length() - 1);	// 마지막에 ' '가 append 되므로 마지막 위치의 문자열을 삭제시킨다.
            System.out.println(sb);
        	
        }
        
	}

}
